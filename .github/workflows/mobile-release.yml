name: Mobile + Release
on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
jobs:
  Android:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e
      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      - name: Install Libraries
        run: |
          haxelib install hmm --quiet
          haxelib run hmm install --quiet
          haxelib run lime setup android
      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Compile
        run: haxelib run lime build android -final
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  iOS:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet
          haxelib run lime setup mac
          haxelib run lime setup ios
      - name: Compile
        run: haxelib run lime build ios -final
      - name: Make Ipa
        run: |
          cd export/release/ios/build/Release-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r YoshiCrafterEngine.ipa Payload
      - name: Make Zip For Release
        run: |
           cd export/release/ios/build/Release-iphoneos
           zip YoshiCrafterEngine-iOS.zip YoshiCrafterEngine.ipa
      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.zip
          if-no-files-found: error
  Releaser:
    needs: [Android, iOS]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download Android Build
        uses: actions/download-artifact@main
        with:
           name: androidBuild
           path: /home/runner
      - name: Move Android File
        run: mv /home/runner/YoshiCrafterEngine-release.apk /home/runner/YoshiCrafterEngine-Android.apk
      - name: Download iOS Build
        uses: actions/download-artifact@main
        with:
           name: iOSBuild
           path: /home/runner
      - name: Publish The Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "dev-8c4d9bf"
          title: "DevBuild 8c4d9bf"
          files: |
            /home/runner/*.apk
            /home/runner/*.zip
